{"ast":null,"code":"var _jsxFileName = \"/Users/tamkieu/Desktop/Workplace/MERN/client/src/pages/messenger/Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversation/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + currentChat._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n    } catch (err) {\n      console.log(err);\n    }\n  }; // Scroll auto when new messages\n\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chatMenuInput\",\n            placeholder: \"Search for friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleClick,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Looks like you need to break the ice now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"BztNANQqJUiZl5csPIYQvnxva0g=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["Topbar","Conversation","Message","ChatOnline","useContext","useEffect","useState","useRef","AuthContext","axios","io","Messenger","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","user","scrollRef","getConversations","res","get","_id","data","err","console","log","getMessages","handleClick","e","preventDefault","message","sender","text","conversationId","post","current","scrollIntoView","behavior","map","c","m","target","value"],"sources":["/Users/tamkieu/Desktop/Workplace/MERN/client/src/pages/messenger/Messenger.jsx"],"sourcesContent":["import \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversation/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport {io} from \"socket.io-client\";\n\nexport default function Messenger() {\n    const [conversations, setConversations] = useState([]);\n    const [currentChat, setCurrentChat] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const { user } = useContext(AuthContext);\n    const scrollRef = useRef();\n\n    useEffect(() => {\n        const getConversations = async () => {\n            try {\n                const res = await axios.get(\"/conversations/\" + user._id);\n                setConversations(res.data);\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getConversations();\n    }, [user._id]);\n    useEffect(() => {\n        const getMessages = async () => {\n            try {\n                const res = await axios.get(\"/messages/\" + currentChat._id);\n                setMessages(res.data);\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getMessages();\n    }, [currentChat]);\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n        const message = {\n            sender: user._id,\n            text: newMessage,\n            conversationId : currentChat._id\n        };\n\n        try{\n            const res = await axios.post(\"/messages\", message);\n            setMessages([...messages, res.data]);\n        } catch(err){\n            console.log(err);\n        }\n    }\n\n    // Scroll auto when new messages\n    useEffect(()=>{\n        scrollRef.current?.scrollIntoView({behavior: \"smooth\"});\n    }, [messages])\n\n    return (\n        <>\n            <Topbar />\n            <div className=\"messenger\">\n                <div className=\"chatMenu\">\n                    <div className=\"chatMenuWrapper\">\n                        <input\n                            className=\"chatMenuInput\"\n                            placeholder=\"Search for friend\"\n                        />\n                        {conversations.map((c) => (\n                            <div onClick={() => setCurrentChat(c)}>\n                                <Conversation\n                                    conversation={c}\n                                    currentUser={user}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"chatBox\">\n                    <div className=\"chatBoxWrapper\">\n                        {currentChat ? (\n                            <>\n                                <div className=\"chatBoxTop\">\n                                    {messages.map((m) => (\n                                        <div ref={scrollRef}>\n                                        <Message\n                                            message={m}\n                                            own={m.sender === user._id}\n                                        />\n                                        </div>\n                                    ))}\n                                </div>\n                                <div className=\"chatBoxBottom\">\n                                    <textarea\n                                        className=\"chatMessageInput\"\n                                        placeholder=\"write something...\"\n                                        onChange={(e)=>setNewMessage(e.target.value)}\n                                        value={newMessage}\n                                    ></textarea>\n                                    <button className=\"chatSubmitButton\" onClick={handleClick}>\n                                        Send\n                                    </button>\n                                </div>{\" \"}\n                            </>\n                        ) : (\n                            <span className=\"noConversationText\">\n                                Looks like you need to break the ice now\n                            </span>\n                        )}\n                    </div>\n                </div>\n                <div className=\"chatOnline\">\n                    <div className=\"chatOnlineWrapper\">\n                        <ChatOnline />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}